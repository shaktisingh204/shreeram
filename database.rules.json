
{
  "rules": {
    "students": {
      ".read": true,
      ".write": true
      // Example validation for student data:
      // "$studentId": {
      //   ".validate": "newData.hasChildren(['fullName', 'contactDetails', 'status', 'feesDue', 'enrollmentDate']) && newData.child('fullName').isString() && newData.child('feesDue').isNumber()"
      // }
      // Example index for students if you query by status or name:
      // ".indexOn": ["status", "fullName"]
    },
    "seats": {
      ".read": true,
      ".write": true,
      ".indexOn": ["floor", "seatNumber"] // Indexing for floor and seatNumber
      // Example validation for seat data:
      // "$seatId": {
      //   ".validate": "newData.hasChildren(['seatNumber', 'floor', 'isOccupied']) && newData.child('seatNumber').isString() && newData.child('floor').isString() && newData.child('isOccupied').isBoolean()"
      // }
    },
    "paymentTypes": {
      ".read": true,
      ".write": true
      // Example validation for payment type data:
      // "$paymentTypeId": {
      //   ".validate": "newData.hasChildren(['name', 'amount', 'frequency']) && newData.child('name').isString() && newData.child('amount').isNumber() && newData.child('frequency').isString()"
      // }
    },
    "payments": {
      ".read": true,
      ".write": true
      // Example validation for payment data:
      // "$paymentId": {
      //   ".validate": "newData.hasChildren(['studentId', 'amount', 'paymentDate']) && newData.child('studentId').isString() && newData.child('amount').isNumber() && newData.child('paymentDate').isString()"
      // }
    },
    "config": {
      "adminPassword": {
        ".read": true,
        ".write": true // Allows the settings page to update the password
      }
    }
  }
}
